# Database Configuration
MONGODB_URI=mongodb://localhost:27017/careconnect
DB_NAME=careconnect

# Server Configuration
PORT=5000
NODE_ENV=development

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRE=7d

# CORS Configuration
FRONTEND_URL=http://localhost:5173

# File Upload Configuration
MAX_FILE_SIZE=5242880
UPLOAD_PATH=./uploads

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ================================
# CareConnect Backend Configuration
# ================================
# Copy this file to .env and fill in your own values

# ==================
# SERVER CONFIGURATION
# ==================
PORT=5000
NODE_ENV=development
FRONTEND_URL=http://localhost:5173

# ==================
# DATABASE CONFIGURATION
# ==================
# Local MongoDB (default) or MongoDB Atlas connection string
MONGODB_URI=mongodb://localhost:27017/careconnect
DB_NAME=careconnect

# ==================
# JWT AUTHENTICATION
# ==================
# Generate a strong, unique secret key for production
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRE=7d

# ==================
# EMAIL CONFIGURATION
# ==================
# Gmail SMTP Settings (or use your preferred email provider)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_SECURE=false

# Team Platform Email Credentials 
# Use your shared CareConnect platform email account
EMAIL_USER=careconnect.platform@gmail.com
EMAIL_PASSWORD=your-shared-gmail-app-password

# Email Display Settings
EMAIL_FROM_NAME=CareConnect Platform
EMAIL_FROM_ADDRESS=careconnect.platform@gmail.com
ADMIN_EMAIL=careconnect.platform@gmail.com

# Email Mode (false = send real emails, true = console only)
EMAIL_DEV_MODE=false

# ==================
# FILE UPLOAD SETTINGS
# ==================
# Max file size: 5MB (in bytes)
MAX_FILE_SIZE=5242880
UPLOAD_PATH=./uploads

# ==================
# SECURITY & RATE LIMITING
# ==================
# Rate limiting: 100 requests per 15 minutes
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ==================
# FEATURE FLAGS
# ==================
# Enable/disable email verification for volunteers
EMAIL_VERIFICATION_ENABLED=true

# Enable/disable NGO auto-approval (false = manual approval required)
NGO_AUTO_APPROVAL=false

# ==================
# SETUP INSTRUCTIONS
# ==================
# 1. Install Node.js (v18+) and MongoDB
# 2. Copy this file to .env
# 3. Replace EMAIL_USER and EMAIL_PASSWORD with your Gmail credentials
# 4. Generate Gmail App Password: https://support.google.com/accounts/answer/185833
# 5. Run: npm install
# 6. Run: npm run dev
# 7. Backend will be available at: http://localhost:5000
