@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /* Custom scrollbar styling - keep scrollbar but make it prettier */
  ::-webkit-scrollbar {
    width: 6px;
  }
  
  ::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 3px;
  }
  
  ::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 3px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }
}

@layer utilities {
  .animate-spin-slow {
    animation: spin 3s linear infinite;
  }
  
  .animate-slide-down {
    animation: slideDown 0.8s ease-out;
  }
  
  .animate-fade-in-left {
    animation: fadeInLeft 0.8s ease-out;
  }
  
  .animate-fade-in-right {
    animation: fadeInRight 0.8s ease-out;
  }
  
  .animate-fade-in-up {
    animation: fadeInUp 0.6s ease-out 0.3s both;
  }
  
  .animate-fade-in {
    animation: fadeIn 0.8s ease-out;
  }

  .animate-scale-in {
    animation: scaleIn 0.3s ease-out;
  }
  
  .animate-bounce-in {
    animation: bounceIn 0.6s ease-out;
  }
  
  .animate-bounce-subtle {
    animation: bounceSubtle 2s ease-in-out infinite;
  }
  
  .animate-expand {
    animation: expand 0.3s ease-out;
  }
  
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  @keyframes slideDown {
    from {
      transform: translateY(-100%);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes fadeInLeft {
    from {
      transform: translateX(-30px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  @keyframes fadeInRight {
    from {
      transform: translateX(30px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  @keyframes fadeInUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  @keyframes fadeInScale {
    from {
      transform: scale(0.8) translateY(10px);
      opacity: 0;
    }
    to {
      transform: scale(1) translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes bounceIn {
    0% {
      transform: scale(0.3);
      opacity: 0;
    }
    50% {
      transform: scale(1.05);
    }
    70% {
      transform: scale(0.9);
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }
  
  @keyframes bounceSubtle {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-2px);
    }
  }
  
  @keyframes expand {
    from {
      width: 0;
    }
    to {
      width: 1.5rem;
    }
  }

  @keyframes scaleIn {
    from {
      transform: scale(0.9);
      opacity: 0;
    }
    to {
      transform: scale(1);
      opacity: 1;
    }
  }
}

/* React Calendar Styles */
.react-calendar {
  width: 100%;
  max-width: 100%;
  background: white;
  border: none;
  font-family: inherit;
  line-height: 1.125em;
}

.react-calendar--doubleView {
  width: 700px;
}

.react-calendar--doubleView .react-calendar__viewContainer {
  display: flex;
  margin: -0.5em;
}

.react-calendar--doubleView .react-calendar__viewContainer > * {
  width: 50%;
  margin: 0.5em;
}

.react-calendar,
.react-calendar *,
.react-calendar *:before,
.react-calendar *:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.react-calendar button {
  margin: 0;
  border: 0;
  outline: none;
}

.react-calendar button:enabled:hover,
.react-calendar button:enabled:focus {
  background-color: #e6f3ff;
}

.react-calendar__navigation {
  display: flex;
  height: 44px;
  margin-bottom: 1em;
}

.react-calendar__navigation button {
  min-width: 44px;
  background: none;
  font-size: 16px;
  margin-top: 8px;
}

.react-calendar__navigation button:disabled {
  background-color: #f0f0f0;
}

.react-calendar__navigation button:enabled:hover,
.react-calendar__navigation button:enabled:focus {
  background-color: #e6f3ff;
}

.react-calendar__month-view__weekdays {
  text-align: center;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 0.75em;
}

.react-calendar__month-view__weekdays__weekday {
  padding: 0.5em;
  color: #6b7280;
}

.react-calendar__month-view__weekNumbers .react-calendar__tile {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75em;
  font-weight: bold;
  color: #6b7280;
}

.react-calendar__month-view__days__day--weekend {
  color: #d10000;
}

.react-calendar__month-view__days__day--neighboringMonth {
  color: #757575;
}

.react-calendar__year-view .react-calendar__tile,
.react-calendar__decade-view .react-calendar__tile,
.react-calendar__century-view .react-calendar__tile {
  padding: 2em 0.5em;
}

.react-calendar__tile {
  max-width: 100%;
  padding: 0.75em 0.5em;
  background: none;
  text-align: center;
  line-height: 16px;
  font-size: 0.833em;
}

.react-calendar__tile:disabled {
  background-color: #f0f0f0;
  color: #ababab;
}

.react-calendar__tile:enabled:hover,
.react-calendar__tile:enabled:focus {
  background-color: #e6f3ff;
}

.react-calendar__tile--now {
  background: #ffff76;
}

.react-calendar__tile--now:enabled:hover,
.react-calendar__tile--now:enabled:focus {
  background: #ffffa9;
}

.react-calendar__tile--hasActive {
  background: #76baff;
}

.react-calendar__tile--hasActive:enabled:hover,
.react-calendar__tile--hasActive:enabled:focus {
  background: #a9d4ff;
}

.react-calendar__tile--active {
  background: #006edc;
  color: white;
}

.react-calendar__tile--active:enabled:hover,
.react-calendar__tile--active:enabled:focus {
  background: #1087ff;
}

.react-calendar--selectRange .react-calendar__tile--hover {
  background-color: #e6f3ff;
}

/* Custom highlight for events */
.highlight-event {
  background-color: #dbeafe !important;
  color: #1e40af !important;
  font-weight: bold;
}

.highlight-event:hover {
  background-color: #bfdbfe !important;
}

/* Prevent horizontal scrolling and make media/layouts more robust */
html, body {
  /* hide any accidental horizontal overflow from 100vw elements or long content */
  overflow-x: hidden;
}

/* Make common layout roots shrinkable so flex/grid children don't cause overflow */
#root, .app-root, .container, .max-w-7xl, .flex, .grid {
  min-width: 0;
}

/* Responsive media elements */
img, svg, video, canvas, iframe {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Fix elements that set width:100vw (which ignores scrollbar width and causes overflow) */
*[style*="100vw"] {
  width: 100%;
  max-width: 100vw;
  box-sizing: border-box;
}

/* Utility class to hide horizontal overflow for specific components if needed */
.overflow-x-hidden {
  overflow-x: hidden !important;
}

